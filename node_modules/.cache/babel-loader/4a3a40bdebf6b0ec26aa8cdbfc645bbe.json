{"ast":null,"code":"var _jsxFileName = \"D:\\\\golu\\\\utkarsh\\\\src\\\\contexts\\\\SampleContext.js\";\nimport React from 'react';\nexport const MyContext = React.createContext();\n\nfunction SampleContext() {\n  const themes = {\n    light: {\n      foreground: \"#000000\",\n      background: \"#eeeeee\"\n    },\n    dark: {\n      foreground: \"#ffffff\",\n      background: \"#222222\"\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MyContext.Provider, {\n    value: themes.dark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 18\n    }\n  }, props.children));\n}\n\nexport default SampleContext;\nconst ThemeContext = React.createContext(themes.light);\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: themes.dark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction Toolbar(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ThemedButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction ThemedButton() {\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      background: theme.background,\n      color: theme.foreground\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"I am styled by theme context!\");\n}\n\nT;","map":{"version":3,"sources":["D:/golu/utkarsh/src/contexts/SampleContext.js"],"names":["React","MyContext","createContext","SampleContext","themes","light","foreground","background","dark","props","children","ThemeContext","App","Toolbar","ThemedButton","theme","useContext","color","T"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAGD,KAAK,CAACE,aAAN,EAAlB;;AACP,SAASC,aAAT,GAAyB;AACrB,QAAMC,MAAM,GAAC;AACTC,IAAAA,KAAK,EAAC;AACFC,MAAAA,UAAU,EAAE,SADV;AAEFC,MAAAA,UAAU,EAAE;AAFV,KADG;AAKTC,IAAAA,IAAI,EAAC;AACDF,MAAAA,UAAU,EAAE,SADX;AAEDC,MAAAA,UAAU,EAAE;AAFX;AALI,GAAb;AAUA,sBACI,uDACS,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAEH,MAAM,CAACI,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACYC,KAAK,CAACC,QADlB,CADT,CADJ;AAOH;;AAED,eAAeP,aAAf;AASE,MAAMQ,YAAY,GAAGX,KAAK,CAACE,aAAN,CAAoBE,MAAM,CAACC,KAA3B,CAArB;;AAEA,SAASO,GAAT,GAAe;AACb,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAER,MAAM,CAACI,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,SAASK,OAAT,CAAiBJ,KAAjB,EAAwB;AACtB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,SAASK,YAAT,GAAwB;AACtB,QAAMC,KAAK,GAAGC,UAAU,CAACL,YAAD,CAAxB;AACA,sBACE;AAAQ,IAAA,KAAK,EAAE;AAAEJ,MAAAA,UAAU,EAAEQ,KAAK,CAACR,UAApB;AAAgCU,MAAAA,KAAK,EAAEF,KAAK,CAACT;AAA7C,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF;AAKD;;AACDY,CAAC","sourcesContent":["import React from 'react'\r\nexport const MyContext = React.createContext()\r\nfunction SampleContext() {\r\n    const themes={\r\n        light:{\r\n            foreground: \"#000000\",\r\n            background: \"#eeeeee\"\r\n        },\r\n        dark:{\r\n            foreground: \"#ffffff\",\r\n            background: \"#222222\"\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n                 <MyContext.Provider value={themes.dark}>\r\n                            {props.children}\r\n                 </MyContext.Provider> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SampleContext\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  const ThemeContext = React.createContext(themes.light);\r\n  \r\n  function App() {\r\n    return (\r\n      <ThemeContext.Provider value={themes.dark}>\r\n        <Toolbar />\r\n      </ThemeContext.Provider>\r\n    );\r\n  }\r\n  \r\n  function Toolbar(props) {\r\n    return (\r\n      <div>\r\n        <ThemedButton />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  function ThemedButton() {\r\n    const theme = useContext(ThemeContext);\r\n    return (\r\n      <button style={{ background: theme.background, color: theme.foreground }}>\r\n        I am styled by theme context!\r\n      </button>\r\n    );\r\n  }\r\n  T"]},"metadata":{},"sourceType":"module"}