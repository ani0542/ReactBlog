{"ast":null,"code":"var _jsxFileName = \"D:\\\\golu\\\\utkarsh\\\\src\\\\Components\\\\Counter.js\";\nimport React, { useState, useMemo } from 'react';\n\nfunction Counter() {\n  const [counterOne, setCounterOne] = useState(0);\n  const [counterTwo, setCounterTwo] = useState(2000000001);\n\n  const incrementOne = () => {\n    setCounterOne(counterOne + 1);\n  };\n\n  const incrementTwo = () => {\n    setCounterTwo(counterTwo + 1);\n  };\n\n  const isEven = useMemo(() => {\n    let i = 0;\n\n    while (i < 2000000000) i++;\n\n    return counterOne % 2 === 0;\n  }, [counterOne]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Count One - \", counterOne), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, isEven ? 'Even' : 'Odd')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Count Two - \", counterTwo)));\n}\n\nexport default Counter;","map":{"version":3,"sources":["D:/golu/utkarsh/src/Components/Counter.js"],"names":["React","useState","useMemo","Counter","counterOne","setCounterOne","counterTwo","setCounterTwo","incrementOne","incrementTwo","isEven","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;;AAEA,SAASC,OAAT,GAAmB;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,UAAD,CAA5C;;AAEA,QAAMO,YAAY,GAAG,MAAM;AAC1BH,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACA,GAFD;;AAIA,QAAMK,YAAY,GAAG,MAAM;AAC1BF,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACC,GAFF;;AAIC,QAAMI,MAAM,GAAGR,OAAO,CAAC,MAAM;AAC3B,QAAIS,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAG,UAAX,EAAuBA,CAAC;;AACxB,WAAOP,UAAU,GAAG,CAAb,KAAmB,CAA1B;AACD,GAJqB,EAInB,CAACA,UAAD,CAJmB,CAAtB;AAMD,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAQ,IAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA4CJ,UAA5C,CADL,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOM,MAAM,GAAG,MAAH,GAAY,KAAzB,CAFL,CADD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAQ,IAAA,OAAO,EAAED,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA4CH,UAA5C,CADL,CALD,CADD;AAWA;;AAED,eAAeH,OAAf","sourcesContent":["import React, { useState, useMemo } from 'react'\r\n\r\nfunction Counter() {\r\n\tconst [counterOne, setCounterOne] = useState(0)\r\n\tconst [counterTwo, setCounterTwo] = useState(2000000001)\r\n\r\n\tconst incrementOne = () => {\r\n\t\tsetCounterOne(counterOne + 1)\r\n\t}\r\n\r\n\tconst incrementTwo = () => {\r\n\t\tsetCounterTwo(counterTwo + 1)\r\n  }\r\n\r\n  const isEven = useMemo(() => {\r\n    let i = 0\r\n    while (i < 2000000000) i++\r\n    return counterOne % 2 === 0\r\n  }, [counterOne])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n        <button onClick={incrementOne}>Count One - {counterOne}</button>\r\n        <span>{isEven ? 'Even' : 'Odd'}</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n        <button onClick={incrementTwo}>Count Two - {counterTwo}</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Counter"]},"metadata":{},"sourceType":"module"}