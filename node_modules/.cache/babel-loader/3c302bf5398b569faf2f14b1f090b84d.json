{"ast":null,"code":"var _jsxFileName = \"D:\\\\golu\\\\utkarsh\\\\src\\\\Components\\\\Counter.js\";\n// import React, { useState } from 'react'\n// function Counter() {\n//     const [counterOne, setCounterOne] = useState(0)\n//     const [counterTwo, setCounterTwo] = useState(0)\n//     const incrementOne = () => {\n// \t\tsetCounterOne(counterOne + 1)\n// \t}\n// \tconst incrementTwo = () => {\n// \t\tsetCounterTwo(counterTwo + 1)\n//   }\n//   const isEven=()=>{\n//       return counterOne %2 == 0;\n//   }\n//     return (\n//         <>\n//                  <div>\n//                           <button onClick={incrementOne}>Count One - {counterOne}</button>\n//                             <span>{isEven ? 'Even' : 'Odd'}</span>\n// \t\t\t   </div>\n// \t\t\t    <div>\n//                           <button onClick={incrementTwo}>Count Two - {counterTwo}</button>\n// \t\t\t     </div>     \n//         </>\n//     )\n// }\n// export default Counter\nimport React, { useState, useMemo } from 'react';\n\nfunction Counter() {\n  const [counterOne, setCounterOne] = useState(0);\n  const [counterTwo, setCounterTwo] = useState(0);\n\n  const incrementOne = () => {\n    setCounterOne(counterOne + 1);\n  };\n\n  const incrementTwo = () => {\n    setCounterTwo(counterTwo + 1);\n  };\n\n  const isEven = () => {\n    return counterOne % 2 === 0;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Count One - \", counterOne), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, isEven ? 'Even' : 'Odd')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Count Two - \", counterTwo)));\n}\n\nexport default Counter;","map":{"version":3,"sources":["D:/golu/utkarsh/src/Components/Counter.js"],"names":["React","useState","useMemo","Counter","counterOne","setCounterOne","counterTwo","setCounterTwo","incrementOne","incrementTwo","isEven"],"mappings":";AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;;AAEA,SAASC,OAAT,GAAmB;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMO,YAAY,GAAG,MAAM;AAC1BH,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACA,GAFD;;AAIA,QAAMK,YAAY,GAAG,MAAM;AAC1BF,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACC,GAFF;;AAIC,QAAMI,MAAM,GAAG,MAAM;AAEnB,WAAON,UAAU,GAAG,CAAb,KAAmB,CAA1B;AACD,GAHD;;AAKD,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAQ,IAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA4CJ,UAA5C,CADL,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOM,MAAM,GAAG,MAAH,GAAY,KAAzB,CAFL,CADD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAQ,IAAA,OAAO,EAAED,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA4CH,UAA5C,CADL,CALD,CADD;AAWA;;AAED,eAAeH,OAAf","sourcesContent":["// import React, { useState } from 'react'\r\n\r\n// function Counter() {\r\n\r\n//     const [counterOne, setCounterOne] = useState(0)\r\n//     const [counterTwo, setCounterTwo] = useState(0)\r\n    \r\n//     const incrementOne = () => {\r\n// \t\tsetCounterOne(counterOne + 1)\r\n// \t}\r\n\r\n// \tconst incrementTwo = () => {\r\n// \t\tsetCounterTwo(counterTwo + 1)\r\n//   }\r\n\r\n\r\n//   const isEven=()=>{\r\n//       return counterOne %2 == 0;\r\n//   }\r\n//     return (\r\n//         <>\r\n//                  <div>\r\n//                           <button onClick={incrementOne}>Count One - {counterOne}</button>\r\n//                             <span>{isEven ? 'Even' : 'Odd'}</span>\r\n// \t\t\t   </div>\r\n// \t\t\t    <div>\r\n//                           <button onClick={incrementTwo}>Count Two - {counterTwo}</button>\r\n// \t\t\t     </div>     \r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default Counter\r\n\r\n\r\n\r\nimport React, { useState, useMemo } from 'react'\r\n\r\nfunction Counter() {\r\n\tconst [counterOne, setCounterOne] = useState(0)\r\n\tconst [counterTwo, setCounterTwo] = useState(0)\r\n\r\n\tconst incrementOne = () => {\r\n\t\tsetCounterOne(counterOne + 1)\r\n\t}\r\n\r\n\tconst incrementTwo = () => {\r\n\t\tsetCounterTwo(counterTwo + 1)\r\n  }\r\n\r\n  const isEven = () => {\r\n  \r\n    return counterOne % 2 === 0\r\n  }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n        <button onClick={incrementOne}>Count One - {counterOne}</button>\r\n        <span>{isEven ? 'Even' : 'Odd'}</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n        <button onClick={incrementTwo}>Count Two - {counterTwo}</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Counter"]},"metadata":{},"sourceType":"module"}