{"ast":null,"code":"var _jsxFileName = \"D:\\\\golu\\\\utkarsh\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Login from './auth/Login';\nimport Register from './auth/Register';\nimport Header from './layouts/Header';\nimport './App.css';\nimport axios from 'axios';\nimport MyContext from \"./Context/UserContext\";\nexport default function App() {\n  const [userData, setuserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n  useEffect(() => {\n    async function checkLoggedIn() {\n      let token = localStorage.getItem('auth-token');\n\n      if (token === null) {\n        localStorage.setItem('auth-token', '');\n        token = '';\n      }\n\n      const tokenRes = await axios.post('http://localhost:5000/users//tokenIsValid', null, {\n        headers: {\n          \"x-auth-token\": token\n        }\n      });\n      console.log(tokenRes.data);\n\n      if (tokenRes.data) {\n        const userRes = await axios.get('http://localhost:5000/users/', {\n          headers: {\n            \"x-auth-token\": token\n          }\n        });\n        setuserData({\n          token,\n          user: userRes.data\n        });\n      }\n    }\n\n    checkLoggedIn();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MyContext.Provider, {\n    value: {\n      userData,\n      setuserData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    component: Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 45\n    }\n  })))));\n} // import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter, Switch, Route } from \"react-router-dom\";\n// import Axios from \"axios\";\n// import Header from \"./layouts/Header\";\n// import Home from \"./Home\";\n// import Login from \"./auth/Login\";\n// import Register from \"./auth/Register\";\n// import UserContext from \"./Context/UserContext\";\n// import \"./App.css\";\n// export default function App() {\n//   const [userData, setUserData] = useState({\n//     token: undefined,\n//     user: undefined,\n//   });\n//   useEffect(() => {\n//     const checkLoggedIn = async () => {\n//       let token = localStorage.getItem(\"auth-token\");\n//       if (token === null) {\n//         localStorage.setItem(\"auth-token\", \"\");\n//         token = \"\";\n//       }\n//       const tokenRes = await Axios.post(\n//         \"http://localhost:5000/users/tokenIsValid\",\n//         null,\n//         { headers: { \"x-auth-token\": token } }\n//       );\n//       if (tokenRes.data) {\n//         const userRes = await Axios.get(\"http://localhost:5000/users/\", {\n//           headers: { \"x-auth-token\": token },\n//         });\n//         setUserData({\n//           token,\n//           user: userRes.data,\n//         });\n//       }\n//     };\n//     checkLoggedIn();\n//   }, []);\n//   return (\n//     <>\n//       <BrowserRouter>\n//         <UserContext.Provider value={{ userData, setUserData }}>\n//           <Header />\n//           <div className=\"container\">\n//             <Switch>\n//               <Route exact path=\"/\" component={Home} />\n//               <Route path=\"/login\" component={Login} />\n//               <Route path=\"/register\" component={Register} />\n//             </Switch>\n//           </div>\n//         </UserContext.Provider>\n//       </BrowserRouter>\n//     </>\n//   );\n// }","map":{"version":3,"sources":["D:/golu/utkarsh/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","Home","Login","Register","Header","axios","MyContext","App","userData","setuserData","token","undefined","user","checkLoggedIn","localStorage","getItem","setItem","tokenRes","post","headers","console","log","data","userRes","get"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport Home from './Home'\r\nimport Login from './auth/Login'\r\nimport Register from './auth/Register'\r\nimport Header from './layouts/Header'\r\nimport './App.css'\r\nimport axios from 'axios'\r\nimport MyContext from \"./Context/UserContext\";\r\nexport default function App() {\r\n\r\n    const [userData,setuserData] =useState({\r\n        token:undefined,\r\n        user:undefined\r\n    })\r\n\r\n    useEffect(()=>{\r\n           async function checkLoggedIn()\r\n            {\r\n                let token=localStorage.getItem('auth-token')\r\n                if(token===null)\r\n                {\r\n                    localStorage.setItem('auth-token','')\r\n                    token=''\r\n                }\r\n                const tokenRes=await axios.post('http://localhost:5000/users//tokenIsValid',null,{\r\n                    headers:{\r\n                                \"x-auth-token\":token\r\n                    }\r\n                })\r\n                console.log(tokenRes.data)\r\n                if(tokenRes.data)\r\n                {\r\n                    const userRes=await axios.get('http://localhost:5000/users/',{\r\n                        headers:{\r\n                            \"x-auth-token\":token\r\n                        }\r\n                    })\r\n                    setuserData({\r\n                        token,\r\n                        user:userRes.data,\r\n                    })\r\n                }\r\n            }\r\n            checkLoggedIn()\r\n    },[])\r\n    return (\r\n        <>\r\n               <MyContext.Provider value={{userData,setuserData}}>\r\n                        <BrowserRouter>\r\n                                    <Header/>\r\n                                    <Switch>\r\n                                            <Route exact path='/' component={Home}/>\r\n                                            <Route exact path='/login' component={Login}/>\r\n                                            <Route exact path='/register' component={Register}/>\r\n                                    </Switch>\r\n                        </BrowserRouter>\r\n               </MyContext.Provider>\r\n              \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n// import Axios from \"axios\";\r\n// import Header from \"./layouts/Header\";\r\n// import Home from \"./Home\";\r\n// import Login from \"./auth/Login\";\r\n// import Register from \"./auth/Register\";\r\n// import UserContext from \"./Context/UserContext\";\r\n\r\n// import \"./App.css\";\r\n\r\n// export default function App() {\r\n//   const [userData, setUserData] = useState({\r\n//     token: undefined,\r\n//     user: undefined,\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const checkLoggedIn = async () => {\r\n//       let token = localStorage.getItem(\"auth-token\");\r\n//       if (token === null) {\r\n//         localStorage.setItem(\"auth-token\", \"\");\r\n//         token = \"\";\r\n//       }\r\n//       const tokenRes = await Axios.post(\r\n//         \"http://localhost:5000/users/tokenIsValid\",\r\n//         null,\r\n//         { headers: { \"x-auth-token\": token } }\r\n//       );\r\n//       if (tokenRes.data) {\r\n//         const userRes = await Axios.get(\"http://localhost:5000/users/\", {\r\n//           headers: { \"x-auth-token\": token },\r\n//         });\r\n//         setUserData({\r\n//           token,\r\n//           user: userRes.data,\r\n//         });\r\n//       }\r\n//     };\r\n\r\n//     checkLoggedIn();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n//       <BrowserRouter>\r\n//         <UserContext.Provider value={{ userData, setUserData }}>\r\n//           <Header />\r\n//           <div className=\"container\">\r\n//             <Switch>\r\n//               <Route exact path=\"/\" component={Home} />\r\n//               <Route path=\"/login\" component={Login} />\r\n//               <Route path=\"/register\" component={Register} />\r\n//             </Switch>\r\n//           </div>\r\n//         </UserContext.Provider>\r\n//       </BrowserRouter>\r\n//     </>\r\n//   );\r\n// }"]},"metadata":{},"sourceType":"module"}