{"ast":null,"code":"var _jsxFileName = \"D:\\\\golu\\\\utkarsh\\\\src\\\\contexts\\\\blogProvider.js\";\nimport React, { useReducer } from 'react'; // import {BlogContext} from './blogContext';\n\nimport { MyContext } from './blogContext';\nimport blogReducer from './blogReducer';\n\nfunction blogProvider(props) {\n  const initialState = {\n    blogPosts: [],\n    currentBlogPost: null,\n    loading: true\n  };\n  const [state, dispatch] = useReducer(blogReducer, initialState); // Get all Posts\n\n  const getPosts = async () => {\n    try {\n      dispatch({\n        type: 'SENDING_REQUEST'\n      });\n      const res = await fetch('/posts');\n      const data = await res.json();\n      dispatch({\n        type: 'REQUEST_FINISHED'\n      });\n      dispatch({\n        type: 'SET_POSTS',\n        payload: data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MyContext.Provider, {\n    value: {\n      getPosts: getPosts,\n      loading: state.loading,\n      blogPosts: state.blogPosts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }\n  }, props.children));\n}\n\nexport default blogProvider;","map":{"version":3,"sources":["D:/golu/utkarsh/src/contexts/blogProvider.js"],"names":["React","useReducer","MyContext","blogReducer","blogProvider","props","initialState","blogPosts","currentBlogPost","loading","state","dispatch","getPosts","type","res","fetch","data","json","payload","err","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;;AACA,SAAQC,SAAR,QAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAGzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,SAAS,EAAE,EADM;AAEjBC,IAAAA,eAAe,EAAE,IAFA;AAGjBC,IAAAA,OAAO,EAAE;AAHQ,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACE,WAAD,EAAcG,YAAd,CAApC,CATyB,CAczB;;AACA,QAAMM,QAAQ,GAAC,YAAS;AACnB,QAAI;AACDD,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAN,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACAF,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,WAAR;AAAqBK,QAAAA,OAAO,EAAEF;AAA9B,OAAD,CAAR;AACF,KAND,CAME,OAAOG,GAAP,EAAY;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAVD;;AAeA,sBACI,uDACO,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AACnBP,MAAAA,QAAQ,EAACA,QADU;AAEnBH,MAAAA,OAAO,EAACC,KAAK,CAACD,OAFK;AAGnBF,MAAAA,SAAS,EAACG,KAAK,CAACH;AAHG,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMYF,KAAK,CAACiB,QANlB,CADP,CADJ;AAYH;;AAED,eAAelB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\n// import {BlogContext} from './blogContext';\r\nimport {MyContext} from './blogContext';\r\nimport blogReducer from './blogReducer'\r\n\r\nfunction blogProvider(props) {\r\n\r\n    \r\n    const initialState = {\r\n        blogPosts: [],\r\n        currentBlogPost: null,\r\n        loading: true\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(blogReducer, initialState);\r\n\r\n\r\n\r\n\r\n    // Get all Posts\r\n    const getPosts=async()=>{\r\n         try {\r\n            dispatch({ type: 'SENDING_REQUEST' });\r\n            const res = await fetch('/posts');\r\n            const data = await res.json();\r\n            dispatch({ type: 'REQUEST_FINISHED' });\r\n            dispatch({ type: 'SET_POSTS', payload: data });     \r\n         } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n               <MyContext.Provider value={{\r\n                       getPosts:getPosts,\r\n                       loading:state.loading,\r\n                       blogPosts:state.blogPosts,\r\n                       \r\n               }}>\r\n                          {props.children}\r\n              </MyContext.Provider> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default blogProvider\r\n"]},"metadata":{},"sourceType":"module"}